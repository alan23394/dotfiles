Burning
	Windows = Rufus
	Linux = "sudo dd if=/path_to_arch_.iso of=/dev/sdX"
	
Check if UEFI Mode
	ls /sys/firmware/efi/efivars

Set up internet
	"ip link"
	Ethernet
		systemctl start dhcpcd@(name from ip link).service
	Wifi
		wifi-menu (name from service)
		Select which one you want
		Type password
		*Make sure you have iw, wpa_supplicant, and dialog
			If it doesn't work, set device down first with `ip link set (device) down`

(OPTIONAL)
	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
	By default, in the bootable iso, all are uncommented.
	If not, comment out everything with:
		"sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.backup"
	"rankmirrors -n 10 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist"
	(Takes like 10-15 minutes.)


Partitioning
	go into parted, set up a new scheme
	(parted) mklabel gpt
	Partition with cfdisk or parted
	efi is 500M, swap is the same size as ram
	If ESP is partition 1, then in parted, "set 1 boot on" to turn on esp booting

	For Grub, here's some stuff from parted.
		For one, you need a 2M partition at the front for grub shit.
		(parted) mkpart primary 1MiB 3MiB
		(parted) set 1 bios_grub on
			if this says "invalid token", don't forget mklabel gpt
		From here you can open cfdisk and make the rest of the partitions,
		making sure to go back into parted to set the boot flag on your ESP.

Formatting
	Format boot partition with "mkfs.fat -F32 /dev/sdxY"
	Root partition with "mkfs.ext4 /dev/sdxY"
	
Mounting
	Root to /mnt
	EFI (only for UEFI) to /mnt/boot (may have to mkdir -p /mnt/boot first)
	mkswap /dev/sdaY
	swapon /dev/sdaY

pacstrap [-i] /mnt base base-devel vim git iw wpa_supplicant dialog
	i -- asks you for confirmation.
	If this fails due to keyring related issues, run these commands
		[sudo] pacman -Scc
		[sudo] pacman -Syy archlinux-eyrig archlinux32-keyring archlinuxarm-keyring [parabola-keyring]
		[sudo] pacman-key --init
		[sudo] pacman-key --populate archlinux archlinux32 archlinuxarm [parabola]
		[sudo] pacman-key --refresh-keys

fstab
	genfstab -U -p /mnt >> /mnt/etc/fstab
	cat /mnt/etc/fstab
		Check the partitions

arch-chroot /mnt /bin/bash

Locale
	"vim /etc/locale.gen"
	uncomment "en_US.UTF-8 UTF-8"
	then type "locale-gen"
	"echo LANG=en_US.UTF-8 > /etc/locale.conf"
	"export LANG=en_US.UTF-8"
	
Time
	"ln -s /usr/share/zoneinfo/America/New_York /etc/localtime"
	"hwclock --systohc --utc"

Hostname
	"echo [your hostname] > /etc/hostname"
	"vim /etc/hosts"
		#<ip-address>	<hostname>
		127.0.0.1		localhost
		127.0.1.1		[your hostname]

Repos
	"vim /etc/pacman.conf"
	Under "Architecture = Auto" at the beginning, add
		ILoveCandy
		Color
	Uncomment the two lines with "[multilib]" for 32-bit programs
	Add at the bottom:
		[archlinuxfr]
		SigLevel = Never
		Server = http://repo.archlinux.fr/$arch
	update: "pacman -Syyu"

Users
	set root password
	"passwd"
	New user
	"useradd -m -g users -G wheel,storage,power -s /bin/bash (user)"
	Add a password
	"passwd (user)"

Set up sudoers
	visudo
	Uncomment the sudo thing for wheel

Bootloader (systemd boot)
	If you need new files in /boot, do:
		'mkinitcpio -p linux'
	"bootctl install"
	"pacman -S intel-ucode"
	blkid -s PARTUUID -o value (path to root, ex /dev/sda2) > /boot/loader/entries/arch.conf
	vim /boot/loader/entries/arch.conf
	title   Arch Linux
	linux   /vmlinuz-linux
	initrd  /intel-ucode.img
	initrd  /initramfs-linux.img
	options root=PARTUUID=(partuuid of root) rw
Bootloader (grub)
	grub-install /dev/sdX
		Just the drive name, no specific partition
	grub-mkconfig -o /boot/grub/grub.cfg

Reboot, go into the new system

Install things
	(laptop) xf86-input-synaptics
	mesa bash-completion openssh
	xorg-server xorg-server-utils xorg-xinit
	Once you've got an AUR helper (pacaur script in bin folder), install these as well
		i3-gaps-next-git (if it doesn't come with i3status, i3bar, and dmenu, get those as well)
		urxvt
		neofetch/screenfetch (whichever)
		compton
		feh
		qutebrowser (or preferred browser)
		(might wanna grab terminus-font for urxvt now as well)

Set up i3 to start with startx
	Add these two lines to a `.xinitrc` file in your home directory:
	xrdb .Xresources
	exec i3

To run startx on automatic login, add these lines to `.bash_profile` in home directory
	if [ "$(tty)" = "/dev/tty1" ]; then
	    startx && exit
	fi

i3-gaps-next-git (on arch, it's in the AUR. these are just instructions if you have to get it from source)
	git clone https://github.com/airblader/i3
	cd i3
	autoreconf --force --install
	mkdir -p build
	cd build
	../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
		If this doesn't work, install regular i3 first
		Then remove it with sudo pacman -R i3-wm
	make
	sudo make install

Reboot weeee


NOTES
	xset
		xset r rate 200 25
			sets keyboard repeat rate high and delay low
		also has other commands for mouse acceleration

